{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nconst config = {\n  apiKey: \"AIzaSyC2q4QuXxlPOXzuWeOjz4KIjK7wULN1TVI\",\n  authDomain: \"pattonunivercitygroup.firebaseapp.com\",\n  projectId: \"pattonunivercitygroup\",\n  storageBucket: \"pattonunivercitygroup.appspot.com\",\n  messagingSenderId: \"13802219318\",\n  appId: \"1:13802219318:web:2f8db0d92ed040eb62b597\"\n}; // Initialize Firebase\n\nfirebase.initializeApp(config);\nconst auth = firebase.auth();\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\nconst githubAuthProvider = new firebase.auth.GithubAuthProvider();\n\nfunction googlelogin() {\n  return auth.signInWithPopup(googleAuthProvider);\n}\n\nfunction githublogin() {\n  return auth.signInWithPopup(githubAuthProvider);\n}\n\nfunction logout() {\n  return auth.signOut();\n}\n\nfunction signup(email, password) {\n  return auth.createUserWithEmailAndPassword(email, password);\n}\n\nfunction login(email, password) {\n  return auth.signInWithEmailAndPassword(email, password);\n}\n\nfunction resetPassword(email) {\n  return auth.sendPasswordResetEmail(email);\n}\n\nasync function getUser() {\n  try {\n    var user = await firebase.auth().currentUser;\n    var userAccount = {\n      email: user.email,\n      uid: user.uid\n    };\n    return userAccount;\n  } catch (err) {\n    console.log(err);\n    return err;\n  }\n}\n\nexport { auth, googlelogin, githublogin, signup, resetPassword, login, logout, getUser };","map":{"version":3,"sources":["/Users/zacyou/Desktop/PattonUniversity/PattonUniverCity/src/services/firebase.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","initializeApp","auth","googleAuthProvider","GoogleAuthProvider","githubAuthProvider","GithubAuthProvider","googlelogin","signInWithPopup","githublogin","logout","signOut","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","resetPassword","sendPasswordResetEmail","getUser","user","currentUser","userAccount","uid","err","console","log"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,uCAFD;AAGXC,EAAAA,SAAS,EAAE,uBAHA;AAIXC,EAAAA,aAAa,EAAE,mCAJJ;AAKXC,EAAAA,iBAAiB,EAAE,aALR;AAMXC,EAAAA,KAAK,EAAE;AANI,CAAf,C,CASA;;AACAP,QAAQ,CAACQ,aAAT,CAAuBP,MAAvB;AAGA,MAAMQ,IAAI,GAAGT,QAAQ,CAACS,IAAT,EAAb;AAEA,MAAMC,kBAAkB,GAAG,IAAIV,QAAQ,CAACS,IAAT,CAAcE,kBAAlB,EAA3B;AACA,MAAMC,kBAAkB,GAAG,IAAIZ,QAAQ,CAACS,IAAT,CAAcI,kBAAlB,EAA3B;;AAEA,SAASC,WAAT,GAAuB;AACnB,SAAOL,IAAI,CAACM,eAAL,CAAqBL,kBAArB,CAAP;AACH;;AACD,SAASM,WAAT,GAAuB;AACnB,SAAOP,IAAI,CAACM,eAAL,CAAqBH,kBAArB,CAAP;AACH;;AAED,SAASK,MAAT,GAAkB;AACd,SAAOR,IAAI,CAACS,OAAL,EAAP;AACH;;AACD,SAASC,MAAT,CAAgBC,KAAhB,EAAuBC,QAAvB,EAAiC;AAC7B,SAAOZ,IAAI,CAACa,8BAAL,CAAoCF,KAApC,EAA2CC,QAA3C,CAAP;AACH;;AAED,SAASE,KAAT,CAAeH,KAAf,EAAsBC,QAAtB,EAAgC;AAC5B,SAAOZ,IAAI,CAACe,0BAAL,CAAgCJ,KAAhC,EAAuCC,QAAvC,CAAP;AACH;;AAED,SAASI,aAAT,CAAuBL,KAAvB,EAA8B;AAC1B,SAAOX,IAAI,CAACiB,sBAAL,CAA4BN,KAA5B,CAAP;AACH;;AACD,eAAeO,OAAf,GAAwB;AACpB,MAAG;AACC,QAAIC,IAAI,GAAG,MAAM5B,QAAQ,CAACS,IAAT,GAAgBoB,WAAjC;AACA,QAAIC,WAAW,GAAG;AACdV,MAAAA,KAAK,EAAEQ,IAAI,CAACR,KADE;AAEdW,MAAAA,GAAG,EAAEH,IAAI,CAACG;AAFI,KAAlB;AAIA,WAAOD,WAAP;AACH,GAPD,CAOC,OAAME,GAAN,EAAU;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAOA,GAAP;AACH;AAEJ;;AAED,SACIvB,IADJ,EAEIK,WAFJ,EAGIE,WAHJ,EAIIG,MAJJ,EAKIM,aALJ,EAMIF,KANJ,EAOIN,MAPJ,EAQIU,OARJ","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst config = {\n    apiKey: \"AIzaSyC2q4QuXxlPOXzuWeOjz4KIjK7wULN1TVI\",\n    authDomain: \"pattonunivercitygroup.firebaseapp.com\",\n    projectId: \"pattonunivercitygroup\",\n    storageBucket: \"pattonunivercitygroup.appspot.com\",\n    messagingSenderId: \"13802219318\",\n    appId: \"1:13802219318:web:2f8db0d92ed040eb62b597\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(config);\n\n\nconst auth = firebase.auth();\n\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\nconst githubAuthProvider = new firebase.auth.GithubAuthProvider()\n\nfunction googlelogin() {\n    return auth.signInWithPopup(googleAuthProvider);\n}\nfunction githublogin() {\n    return auth.signInWithPopup(githubAuthProvider);\n}\n\nfunction logout() {\n    return auth.signOut();\n}\nfunction signup(email, password) {\n    return auth.createUserWithEmailAndPassword(email, password)\n}\n\nfunction login(email, password) {\n    return auth.signInWithEmailAndPassword(email, password)\n}\n\nfunction resetPassword(email) {\n    return auth.sendPasswordResetEmail(email)\n}\nasync function getUser(){\n    try{\n        var user = await firebase.auth().currentUser;\n        var userAccount = {\n            email: user.email,\n            uid: user.uid\n        }\n        return userAccount\n    }catch(err){\n        console.log(err)\n        return(err)\n    }\n    \n}\n\nexport {\n    auth,\n    googlelogin,\n    githublogin,\n    signup,\n    resetPassword,\n    login,\n    logout,\n    getUser\n}\n"]},"metadata":{},"sourceType":"module"}